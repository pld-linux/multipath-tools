#!/bin/sh
#
# multipathd	Starts multipath daemon
#
# chkconfig:	345 10 90
#
# description:	The multipathd daemon is in charge of checking for failed paths.
#
# $Id$

# Source function library
. /etc/rc.d/init.d/functions

DAEMON=/sbin/multipathd
PIDFILE=/var/run/multipathd.pid

# Set the maximum number of open files
MAX_OPEN_FDS=4096

RETVAL=0
# See how we were called.
case "$1" in
  start)
	msg_starting multipathd
	modprobe dm-multipath

	# Set the maximum number of open files
	if [ -n "$MAX_OPEN_FDS" ] ; then
	    ulimit -n $MAX_OPEN_FDS
	fi

	if [ -f $PIDFILE ]; then
		PID="$(cat $PIDFILE)"
		PROCNAME="$(ps -o cmd --no-headers $PID)"
	fi

	if [ "$PROCNAME" != "$DAEMON" ]; then
		$DAEMON
		RETVAL=$?
		sleep 1
	fi
	;;

  stop)
	msg_stopping multipathd

	# Because of the way how multipathd sets up its own namespace
	# and chroots to it, killproc cannot be used with this process.
	# So implement a cruder version:
	if [ -f $PIDFILE ]; then
		PID="$(cat $PIDFILE)"
		PROCNAME="$(ps -o cmd --no-headers $PID)"
	fi

	if [ "$PROCNAME" == "$DAEMON" ]; then
		kill -TERM $PID
	fi

	;;
    
  restart|force-reload)
	## Stop the service and regardless of whether it was
	## running or not, start it again.
	$0 stop
	$0 start
	;;

  status)
	echo -n "Checking for multipathd: "

	# Status has a slightly different for the status command:
	# 0 - service running
	# 1 - service dead, but /var/run/  pid  file exists
	# 2 - service dead, but /var/lock/ lock file exists
	# 3 - service not running

	if [ -f $PIDFILE ]; then
		PID="$(cat $PIDFILE)"
		PROCNAME="$(ps -o cmd --no-headers $PID)"
		if [ "$PROCNAME" == "$DAEMON" ]; then
			exit 0
		else
			exit 1
		fi
	else
		exit 3
	fi

	;;
  *)
	msg_usage "$0 {start|stop|status|restart|force-reload}"
	exit 3
	;;
esac

exit $RETVAL
